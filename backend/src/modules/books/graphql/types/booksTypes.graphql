type Book {
    id: ID!
    author: String!
    title: String!
    description: String
    year: Int
    genre: String
    rating: Int
    numPages: Int
    format: String  
}
type BookPaginate{
    docs: [Book]
    totalDocs: Int
}

type Query {
    booksFetch(author: String, title: String, page: Int, limit: Int, filters: BooksFilters): BookPaginate
    bookFindById(id: ID): Book
}

type Mutation {
    bookCreateOne(author: String!, title: String!, description: String, year: Int, genre: String, rating: Int, numPages: Int, format: String): Book

    deleteBookById(id: ID): Book

    bookFindByIdAndUpdate(id: ID, author: String!, title: String!, description: String, year: Int, genre: String, rating: Int, numPages: Int, format: String): Book
}

input BooksFilters{
    busqueda: String
    genero: String
    estrellas: Int
    min: Int
    max: Int
    formato: String
}
